
@InProceedings{	  pang02,
  abstract	= {We consider the problem of classifying documents not by
		  topic, but by overall sentiment, e.g., determining whether
		  a review is positive or negative. Using movie reviews as
		  data, we find that standard machine learning techniques
		  definitively outperform human-produced baselines. However,
		  the three machine learning methods we employed (Naive
		  Bayes, maximum entropy classification, and support vector
		  machines) do not perform as well on sentiment
		  classification as on traditional topic-based
		  categorization. We conclude by examining factors that make
		  the sentiment classification problem more challenging.},
  author	= {Bo Pang and Lillian Lee and Shivakumar Vaithyanathan},
  booktitle	= {Proceedings of EMNLP},
  pages		= {79--86},
  title		= {Thumbs Up? Sentiment Classification Using Machine Learning
		  Techniques},
  year		= {2002}
}

@InProceedings{	  pang04,
  abstract	= {Sentiment analysis seeks to identify the viewpoint(s)
		  underlying a text span; an example application is
		  classifying a movie review as ``thumbs up'' or ``thumbs
		  down''. To determine this sentiment polarity, we propose a
		  novel machine-learning method that applies
		  text-categorization techniques to just the subjective
		  portions of the document. Extracting these portions can be
		  implemented using efficient techniques for finding minimum
		  cuts in graphs; this greatly facilitates incorporation of
		  cross-sentence contextual constraints.},
  author	= {Bo Pang and Lillian Lee},
  booktitle	= {Proceedings of ACL},
  pages		= {271--278},
  title		= {A Sentimental Education: Sentiment Analysis Using
		  Subjectivity Summarization Based on Minimum Cuts},
  year		= {2004}
}

@InProceedings{	  pang05,
  abstract	= {We address the rating-inference problem, wherein rather
		  than simply decide whether a review is ``thumbs up'' or
		  ``thumbs down'', as in previous sentiment analysis work,
		  one must determine an author's evaluation with respect to a
		  multi-point scale (e.g., one to five ``stars''). This task
		  represents an interesting twist on standard multi-class
		  text categorization because there are several different
		  degrees of similarity between class labels; for example,
		  ``three stars'' is intuitively closer to ``four stars''
		  than to ``one star''.
		  
		  We first evaluate human performance at the task. Then, we
		  apply a meta-algorithm, based on a metric labeling
		  formulation of the problem, that alters a given n-ary
		  classifier's output in an explicit attempt to ensure that
		  similar items receive similar labels. We show that the
		  meta-algorithm can provide significant improvements over
		  both multi-class and regression versions of SVMs when we
		  employ a novel similarity measure appropriate to the
		  problem.},
  author	= {Bo Pang and Lillian Lee},
  booktitle	= {Proceedings of ACL},
  pages		= {115--124},
  title		= {Seeing Stars: Exploiting Class Relationships For Sentiment
		  Categorization With Respect To Rating Scales},
  year		= {2005}
}

@Book{		  perkins03,
  abstract	= {Text Processing in Python describes techniques for
		  manipulation of text using the Python programming language.
		  At the broadest level, text processing is simply taking
		  textual information and doing something with it. This might
		  be restructuring or reformatting it, extracting smaller
		  bits of information from it, or performing calculations
		  that depend on the text. Text processing is arguably what
		  most programmers spend most of their time doing. Because
		  Python is clear, expressive, and object-oriented it is a
		  perfect language for doing text processing, even better
		  than Perl. As the amount of data everywhere continues to
		  increase, this is more and more of a challenge for
		  programmers. This book is not a tutorial on Python. It has
		  two other goals: helping the programmer get the job done
		  pragmatically and efficiently; and giving the reader an
		  understanding - both theoretically and conceptually - of
		  why what works and what doesnt work doesnt work. Mertz
		  provides practical pointers and tips that emphasize
		  efficient, flexible, and maintainable approaches to the
		  text processing tasks that working programmers face
		  daily.},
  author	= {Perkins, Jacob},
  booktitle	= {Python},
  isbn		= {9781849513609},
  pages		= {544},
  publisher	= {Packt Publishing},
  title		= {Python Text Processing with NLTK 2.0 Cookbook},
  year		= {2003}
}

@Book{		  bird09,
  abstract	= {This book offers a highly accessible introduction to
		  natural language processing, the field that supports a
		  variety of language technologies, from predictive text and
		  email filtering to automatic summarization and translation.
		  With it, you'll learn how to write Python programs that
		  work with large collections of unstructured text. You'll
		  access richly annotated datasets using a comprehensive
		  range of linguistic data structures, and you'll understand
		  the main algorithms for analyzing the content and structure
		  of written communication. Packed with examples and
		  exercises, Natural Language Processing with Python will
		  help you:Extract information from unstructured text, either
		  to guess the topic or identify "named entities" Analyze
		  linguistic structure in text, including parsing and
		  semantic analysis Access popular linguistic databases,
		  including WordNet and treebanks Integrate techniques drawn
		  from fields as diverse as linguistics and artificial
		  intelligence This book will help you gain practical skills
		  in natural language processing using the Python programming
		  language and the Natural Language Toolkit (NLTK) open
		  source library. If you're interested in developing web
		  applications, analyzing multilingual news sources, or
		  documenting endangered languages - or if you're simply
		  curious to have a programmer's perspective on how human
		  language works - you'll find Natural Language Processing
		  with Python both fascinating and immensely useful.},
  author	= {Bird, Steven and Klein, Ewan and Loper, Edward},
  booktitle	= {Text},
  doi		= {10.1097/00004770-200204000-00018},
  isbn		= {9780596516499},
  issn		= {00992399},
  pages		= {479},
  pmid		= {12043876},
  title		= {{Natural Language Processing with Python}},
  url		= {http://www.nltk.org/book/},
  volume	= {43},
  year		= {2009}
}
